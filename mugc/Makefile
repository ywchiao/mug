
#versioning
MAJOR=0
MINOR=1
PATCH=0
VERSION=$(MAJOR).$(MINOR).$(PATCH)

BIN=$(notdir $(CURDIR))
DBG=$(BIN)g

SRC=src
INC=inc
OBJ=obj/bin
DBJ=obj/dbg
LIB=lib
BLD=bin
BLD_NUM=build.number

INCLUDES=-I. -I$(INC)
LIBS=-lncursesw
#LIBS=$(GTK_LIBS) -lstdc++

CC=gcc

CFLAGS= -std=c11 -O3 -Wall -Wextra -DNDEBUG $(VER_INFO) $(3RD_CFLAGS)
CDEBUG= -std=c11 -g -O0 -Wall -Wextra $(VER_INFO) $(3RD_CFLAGS)

LDFLAG= -L$(LIB)

VER_FILE=$(SRC)/about.c

VER_INFO= -D__MAJOR__=$(MAJOR) \
		  -D__MINOR__=$(MINOR) \
		  -D__PATCH__=$(PATCH) \
		  -D__BUILD__=$(shell cat $(BLD_NUM))

#SOURCES=$(filter-out $(SRC)/about.c, $(wildcard $(SRC)/*.c))
SOURCES=$(wildcard $(SRC)/*.c)
HEADERS=$(addprefix $(INC)/,$(notdir $(patsubst %.c,%.h,$(SOURCES))))
OBJECTS=$(notdir $(patsubst %.c,%.o,$(SOURCES)))
BIN_OBJS=$(addprefix $(OBJ)/,$(OBJECTS))
DBG_OBJS=$(addprefix $(DBJ)/,$(OBJECTS))

# pkg-config --cflags
#3RD_CFLAGS=$(shell pkg-config --cflags 3rd-lib)

# pkg-config --libs
#3RD_LIBS= $(shell pkg-config --libs 3rd-lib)

# implementation

$(OBJ)/%.o: $(SRC)/%.c $(HEADERS)
	$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@ 

$(DBJ)/%.o: $(SRC)/%.c $(HEADERS)
	$(CC) $(CDEBUG) $(INCLUDES) -c $< -o $@

.PHONY: clean

all: debug release

release: pre_check $(BLD)/$(BIN)

$(BLD)/$(BIN): $(BIN_OBJS)
	$(CC) -o $(BLD)/$(BIN) $(BIN_OBJS) $(LDFLAG) $(LIBS)
	@echo $$(($$(cat $(BLD_NUM)) + 1)) > $(BLD_NUM)

debug: pre_check $(BLD)/$(DBG)

$(BLD)/$(DBG): $(DBG_OBJS)
	$(CC) -o $(BLD)/$(DBG) $(DBG_OBJS) $(LDFLAG) $(LIBS)

$(VER_FILE): $(filter-out $(VER_FILE),$(SOURCES)) $(HEADERS)
	@touch $(VER_FILE)

pre_check:
	@if ! test -f $(OBJ); then mkdir -p $(OBJ); fi
	@if ! test -f $(DBJ); then mkdir -p $(DBJ); fi
	@if ! test -f $(BLD); then mkdir -p $(BLD); fi
	@if ! test -f $(BLD_NUM); then echo 0 > $(BLD_NUM); fi

clean:
	rm -f $(BIN_OBJS) $(DBG_OBJS) $(BLD)/* core
